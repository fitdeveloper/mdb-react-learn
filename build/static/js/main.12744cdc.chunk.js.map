{"version":3,"sources":["index.js"],"names":["App","props","_this","Object","C_Users_ghost_Desktop_MDB_React_learning_React_Tutorial_Agenda_App_start_here_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_ghost_Desktop_MDB_React_learning_React_Tutorial_Agenda_App_start_here_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_ghost_Desktop_MDB_React_learning_React_Tutorial_Agenda_App_start_here_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","handleDelete","eventId","events","state","filter","e","id","setState","handleInputChange","inputName","value","nextValue","console","log","C_Users_ghost_Desktop_MDB_React_learning_React_Tutorial_Agenda_App_start_here_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","toggleModal","modal","addEvent","newArray","C_Users_ghost_Desktop_MDB_React_learning_React_Tutorial_Agenda_App_start_here_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","push","length","time","title","location","description","var","i","myArray","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","Event","key","_this2","Fragment","mdbreact__WEBPACK_IMPORTED_MODULE_12__","md","className","map","event","onDelete","xl","color","rounded","onClick","xs","icon","fixed","isOpen","toggle","titleClass","name","label","hint","group","type","getValue","Component","_this3","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12744cdc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n// import \"./index.css\";\r\nimport {\r\n    MDBBtn, MDBInput, MDBModal, MDBModalBody,\r\n    MDBModalHeader, MDBModalFooter, MDBIcon, MDBBadge,\r\n    MDBContainer, MDBRow, MDBCol,\r\n} from \"mdbreact\";\r\n\r\n\r\n\r\n\r\n// 4 . using bootstrap in react  Grid concept\r\n/*\r\n5 different screen sizes in bootstrap : \r\nextra small : default  .col-\r\nsmall : sm     .col-sm-\r\nmedium : md    .col-md-\r\nlarge : lg     .col-lg-\r\nextra large : xl   .col-xl-\r\n\r\n*/\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            events: [\r\n                {\r\n                    id: 1,\r\n                    time: \"10:00\",\r\n                    title: \"Breakfast with Simon\",\r\n                    location: \"Lounge Caffe\",\r\n                    description: \"Discuss Q3 targets\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    time: \"10:30\",\r\n                    title: \"Daily Standup Meeting (recurring)\",\r\n                    location: \"Warsaw Spire Office\"\r\n                },\r\n                { id: 3, time: \"11:00\", title: \"Call with HRs\" },\r\n                {\r\n                    id: 4,\r\n                    time: \"11:00\",\r\n                    title: \"Lunch with Timothy\",\r\n                    location: \"Canteen\",\r\n                    description:\r\n                        \"Project evaluation ile declaring a variable and using an if statement is a fine way to conditionally render a component, sometimes you might want to use a\"\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    handleDelete = eventId => {\r\n        const events = this.state.events.filter(e => e.id !== eventId);\r\n        this.setState({ events });\r\n    };\r\n\r\n\r\n    handleInputChange = inputName => value => {\r\n        const nextValue = value;\r\n        console.log(this.state);\r\n        this.setState({\r\n            [inputName]: nextValue\r\n        });\r\n    };\r\n\r\n\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n\r\n\r\n\r\n    myFunction() {\r\n        var myArray = [];\r\n        var i;\r\n        for (i = 0; i < this.state.events.length; i++) {\r\n            myArray[i] = (\r\n                <Event\r\n                    key={this.state.events[i].id}\r\n                    id={this.state.events[i].id}\r\n                    time={this.state.events[i].time}\r\n                    title={this.state.events[i].title}\r\n                    location={this.state.events[i].location}\r\n                    description={this.state.events[i].description}\r\n\r\n                />\r\n            );\r\n        }\r\n        return myArray;\r\n    }\r\n\r\n\r\n    addEvent = () => {\r\n        var newArray = [...this.state.events];\r\n        newArray.push({\r\n            id: newArray.length ? newArray[newArray.length - 1].id + 1 : 1,\r\n            time: this.state.time,\r\n            title: this.state.title,\r\n            location: this.state.location,\r\n            description: this.state.description,\r\n            value: this.var > 5 ? \"Its's grater then 5\" : \"Its lower or equal 5\"\r\n        });\r\n        this.setState({ events: newArray });\r\n        this.setState({\r\n            time: \"\",\r\n            title: \"\",\r\n            location: \"\",\r\n            description: \"\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MDBContainer>\r\n                    <MDBRow>\r\n                        <MDBCol md=\"9\" className=\"mb-r\">\r\n                            <h2 className=\"text-uppercase my-3\">Today:</h2>\r\n                            <div id=\"schedule-items\">\r\n                                {this.state.events.map(event => (\r\n                                    <Event\r\n                                        key={event.id}\r\n                                        id={event.id}\r\n                                        time={event.time}\r\n                                        title={event.title}\r\n                                        location={event.location}\r\n                                        description={event.description}\r\n                                        onDelete={this.handleDelete}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                            <MDBRow className=\"mb-4\">\r\n                                <MDBCol xl=\"3\" md=\"6\" className=\"mx-auto text-center\">\r\n                                    <MDBBtn color=\"info\" rounded onClick={this.toggleModal}>\r\n                                        Add Event\r\n                                        </MDBBtn>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"3\">\r\n                            <h3 className=\"text-uppercase my-3\">Schedule</h3>\r\n                            <h6 className=\"my-3\">\r\n                                It's going to be busy that today. You have{\" \"}\r\n                                <b>{this.state.events.length} events </b> today.\r\n                               </h6>\r\n                            <h1 className=\"my-3\">\r\n                                <MDBRow>\r\n                                    <MDBCol xs=\"3\" className=\"text-center\">\r\n                                        <MDBIcon icon=\"sun\" fixed />\r\n                                    </MDBCol>\r\n                                    <MDBCol xs=\"9\">Sunny</MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow>\r\n                                    <MDBCol xs=\"3\" className=\"text-center\">\r\n                                        <MDBIcon icon=\"thermometer-three-quarters\" fixed />\r\n                                    </MDBCol>\r\n                                    <MDBCol xs=\"9\">23°C</MDBCol>\r\n                                </MDBRow>\r\n                            </h1>\r\n                            <p>\r\n                                Don't forget your sunglasses. Today will dry and sunny, becoming\r\n                                warm in the afternoon with temperatures of between 20 and 25\r\n                                degrees.\r\n                                </p>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </MDBContainer>\r\n\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggleModal}>\r\n                    <MDBModalHeader\r\n                        className=\"text-center\"\r\n                        titleClass=\"w-100 font-weight-bold\"\r\n                        toggle={this.toggleModal}\r\n                    >\r\n                        Add new event\r\n                        </MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <form className=\"mx-3 grey-text\">\r\n                            <MDBInput\r\n                                name=\"time\"\r\n                                label=\"Time\"\r\n                                icon=\"clock\"\r\n                                hint=\"12:30\"\r\n                                group\r\n                                type=\"text\"\r\n                                getValue={this.handleInputChange(\"time\")}\r\n                            />\r\n                            <MDBInput\r\n                                name=\"title\"\r\n                                label=\"Title\"\r\n                                icon=\"edit\"\r\n                                hint=\"Briefing\"\r\n                                group\r\n                                type=\"text\"\r\n                                getValue={this.handleInputChange(\"title\")}\r\n                            />\r\n                            <MDBInput\r\n                                name=\"location\"\r\n                                label=\"Location (optional)\"\r\n                                icon=\"map\"\r\n                                group\r\n                                type=\"text\"\r\n                                getValue={this.handleInputChange(\"location\")}\r\n                            />\r\n                            <MDBInput\r\n                                name=\"description\"\r\n                                label=\"Description (optional)\"\r\n                                icon=\"sticky-note\"\r\n                                group\r\n                                type=\"textarea\"\r\n                                getValue={this.handleInputChange(\"description\")}\r\n                            />\r\n                        </form>\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter className=\"justify-content-center\">\r\n                        <MDBBtn\r\n                            color=\"info\"\r\n                            onClick={() => {\r\n                                this.toggleModal();\r\n                                this.addEvent();\r\n                            }}\r\n                        >\r\n                            Add\r\n                        </MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nclass Event extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"media mt-1\">\r\n                    <h3 className=\"h3-responsive font-weight-bold mr-3\">\r\n                        {this.props.time}\r\n                    </h3>\r\n                    <div className=\"media-body mb-3 mb-lg-3\">\r\n                        <MDBBadge color=\"danger\" className=\"ml-2 float-right\" onClick={() => this.props.onDelete(this.props.id)}\r\n                        >\r\n                            -\r\n                        </MDBBadge>\r\n                        <h6 className=\"mt-0 font-weight-bold\">{this.props.title} - id : {this.props.id} </h6>{\" \"}\r\n                        <hr className=\"hr-bold my-2\" />\r\n                        {this.props.location && (\r\n                            <React.Fragment>\r\n                                <p className=\"font-smaller mb-0\">\r\n                                    <MDBIcon icon=\"location-arrow\" /> {this.props.location}\r\n                                </p>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                {this.props.description && (\r\n                    <p className=\"p-2 mb-4  blue-grey lighten-5 blue-grey lighten-5\">\r\n                        {this.props.description}\r\n                    </p>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}